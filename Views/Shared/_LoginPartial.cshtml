@using Microsoft.AspNetCore.Identity
@using ReficioSolution.Areas.Identity.Data

@inject SignInManager<ReficioSolutionUser> SignInManager
@inject UserManager<ReficioSolutionUser> UserManager

<!-- Liste for navigasjonselementer i hovedmenyen -->
<ul class="navbar-nav">
    <!-- Sjekk om brukeren er logget inn -->
    @if (SignInManager.IsSignedIn(User))
    {
        <!-- Lenke og hilsen hvis brukeren er logget inn -->
        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                Velkommen tilbake @UserManager.GetUserName(User)!
            </a>
        </li>
        <!-- Logg ut-skjema hvis brukeren er logget inn -->
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">
                    Logg ut
                </button>
            </form>
        </li>
    }
    else
    {
        <!-- Lenker for registrering og innlogging hvis brukeren ikke er logget inn -->
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">
                Registrer
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">
                Logg inn
            </a>
        </li>
    }
</ul>